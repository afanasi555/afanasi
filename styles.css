let moves = 20;
let coins = 0;
let currentLevel = 1;
let tasks = [{ emoji: "üçì", count: 3 }]; // –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
let selectedCell = null; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —è—á–µ–π–∫–∏
let inventory = []; // –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –±–æ–º–±

function startGame() {
    alert('–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!');
    generateBoard();
    updateMoves();
}

function pauseGame() {
    alert('–ò–≥—Ä–∞ –Ω–∞ –ø–∞—É–∑–µ.');
}

function resetGame() {
    alert('–ò–≥—Ä–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞!');
    generateBoard();
    updateMoves();
}

function undoMove() {
    alert('–•–æ–¥ –æ—Ç–º–µ–Ω–µ–Ω.');
}

function openShop() {
    document.querySelector('.shop').style.display = 'block';
}

function closeShop() {
    document.querySelector('.shop').style.display = 'none';
}

function openInventory() {
    document.getElementById('inventory-content').textContent = inventory.join(', ');
    document.querySelector('.inventory').style.display = 'block';
}

function closeInventory() {
    document.querySelector('.inventory').style.display = 'none';
}

function openStats() {
    let statsString = Object.keys(playerStats)
        .map(player => `–ò–≥—Ä–æ–∫ ${player}: –£—Ä–æ–≤–µ–Ω—å ${playerStats[player]}`)
        .join('\n');
    document.getElementById('stats-content').textContent = statsString;
    document.querySelector('.stats').style.display = 'block';
}

function closeStats() {
    document.querySelector('.stats').style.display = 'none';
}

function selectLevel(level) {
    if (level > currentLevel) {
        alert('–≠—Ç–æ—Ç —É—Ä–æ–≤–µ–Ω—å –ø–æ–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.');
        return;
    }
    currentLevel = level;
    alert(`–í—ã –≤—ã–±—Ä–∞–ª–∏ —É—Ä–æ–≤–µ–Ω—å ${level}`);
    loadLevel(level);
}

function loadLevel(level) {
    moves = 20 + level * 5;  // –ü—Ä–∏–º–µ—Ä —É–≤–µ–ª–∏—á–µ–Ω–∏—è —à–∞–≥–æ–≤ —Å –∫–∞–∂–¥—ã–º —É—Ä–æ–≤–Ω–µ–º
    tasks = generateTasksForLevel(level);  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á
    updateTaskList();
    generateBoard();  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
    updateMoves();
}

function generateTasksForLevel(level) {
    let taskList = [];
    if (level >= 5) {
        taskList.push({ emoji: "üçì", count: 5 });
        taskList.push({ emoji: "üçí", count: 4 });
    } else {
        taskList.push({ emoji: "üçì", count: 3 + level });
    }
    return taskList;
}

function updateTaskList() {
    let taskListDiv = document.getElementById("task-list");
    taskListDiv.innerHTML = "";
    tasks.forEach((task, index) => {
        taskListDiv.innerHTML += `<p class="task-item">–ó–∞–¥–∞—á–∞ ${index + 1}: –°–æ–±—Ä–∞—Ç—å ${task.count} ${task.emoji}</p>`;
    });
}

function generateBoard() {
    let board = document.querySelector('.game-board');
    board.innerHTML = "";  // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ
    for (let i = 0; i < 64; i++) {
        let cell = document.createElement('div');
        cell.className = 'cell';
        cell.textContent = getRandomEmoji();  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
        cell.addEventListener('click', () => selectCell(cell, i));  // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –∫–ª–∏–∫–∞
        board.appendChild(cell);
    }
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–ª—è
    checkMatches();
}

function getRandomEmoji() {
    const emojis = ["‚≠ê", "‚ú®", "üí¶", "üî•", "üéâ", "‚ù§Ô∏è", "üçì", "üçí", "üçâ", "üçï", "üê±", "üêØ"];
    return emojis[Math.floor(Math.random() * emojis.length)];
}

function selectCell(cell, index) {
    if (selectedCell === null) {
        selectedCell = { element: cell, index: index };
        cell.style.border = '2px solid red';  // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —è—á–µ–π–∫—É
    } else {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –ø–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏ —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π —è—á–µ–π–∫–æ–π
        if (isAdjacent(selectedCell.index, index)) {
            swapCells(selectedCell.element, cell);  // –ú–µ–Ω—è–µ–º –º–µ—Å—Ç–∞–º–∏ —è—á–µ–π–∫–∏
            moves--;
            updateMoves();
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Ö–æ–¥–∞
            setTimeout(() => {
                checkMatches();  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
                refillBoard();  // –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö –º–µ—Å—Ç –Ω–æ–≤—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏
            }, 500);
        }
        selectedCell.element.style.border = '1px solid #ccc';  // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ
        selectedCell = null;  // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —è—á–µ–π–∫—É
    }
}

function isAdjacent(index1, index2) {
    const row1 = Math.floor(index1 / 8);
    const col1 = index1 % 8;
    const row2 = Math.floor(index2 / 8);
    const col2 = index2 % 8;
    return (Math.abs(row1 - row2) + Math.abs(col1 - col2)) === 1;
}

function swapCells(cell1, cell2) {
    const temp = cell1.textContent;
    cell1.textContent = cell2.textContent;
    cell2.textContent = temp;
}

function checkMatches() {
    let board = document.querySelectorAll('.cell');
    let matchedCells = [];
    let toCheck = [];
    let index;

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã—Ö –∏ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
    for (let i = 0; i < 64; i++) {
        const row = Math.floor(i / 8);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
        if (i % 8 <= 5 && board[i].textContent === board[i + 1].textContent && 
            board[i].textContent === board[i + 2].textContent && board[i].textContent === board[i + 3].textContent) {
            createBomb(i + 1);
            matchedCells.push(i, i + 1, i + 2, i + 3);  // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
        if (row <= 4 && board[i].textContent === board[i + 8].textContent && 
            board[i].textContent === board[i + 16].textContent && board[i].textContent === board[i + 24].textContent) {
            createBomb(i + 8);
            matchedCells.push(i, i + 8, i + 16, i + 24);  // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
        }
    }

    if (matchedCells.length > 0) {
        matchedCells = [...new Set(matchedCells)]; // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
        matchedCells.forEach(index => {
            board[index].textContent = getRandomEmoji();  // –ó–∞–º–µ–Ω—è–µ–º —Å–æ–≤–ø–∞–≤—à–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–æ–≤—ã–º–∏
        });
        // –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—è –ø—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–∞—á–∏
        checkTasks();
    }
}

function createBomb(index) {
    let board = document.querySelectorAll('.cell');
    board[index].textContent = "üí£";  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ–º–±—É –Ω–∞ –º–µ—Å—Ç–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
}

function refillBoard() {
    let board = document.querySelectorAll('.cell');
    for (let i = 0; i < board.length; i++) {
        if (!board[i].textContent || board[i].textContent === "üí£") {
            board[i].textContent = getRandomEmoji();  // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø—É—Å—Ç—ã–µ –º–µ—Å—Ç–∞ –Ω–æ–≤—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏
        }
    }
    checkMatches();  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–æ—Å–ª–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—è
}

function checkTasks() {
    tasks.forEach(task => {
        let count = 0;
        document.querySelectorAll('.cell').forEach(cell => {
            if (cell.textContent === task.emoji) {
                count++;
            }
        });
        task.count -= count;
        if (task.count <= 0) {
            alert('–ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!');
            tasks = tasks.filter(t => t !== task);  // –£–¥–∞–ª—è–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é –∑–∞–¥–∞—á—É
            updateTaskList();
        }
    });
}

function buyBomb() {
    if (coins >= 40) {
        coins -= 40;
        inventory.push('üí£');  // –î–æ–±–∞–≤–ª—è–µ–º –±–æ–º–±—É –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
        alert('–ë–æ–º–±–∞ –∫—É–ø–ª–µ–Ω–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å!');
        updateInventory();
    } else {
        alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç.');
    }
    updateCoins();
}

function buyMove() {
    if (coins >= 1) {
        coins -= 1;
        moves += 1;
        updateMoves();
    } else {
        alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç.');
    }
}

function updateCoins() {
    document.getElementById("coins").textContent = `–ú–æ–Ω–µ—Ç—ã: ${coins}`;
}

function updateMoves() {
    document.getElementById("moves").textContent = `–•–æ–¥–æ–≤: ${moves}`;
}

function updateInventory() {
    document.getElementById('inventory-content').textContent = inventory.join(', ');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.onload = function() {
    startGame();
};
