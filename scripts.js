let moves = 20;
let coins = 0;
let currentLevel = 1;
let tasks = [{emoji: "üçì", count: 3}];  // –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —É—Ä–æ–≤–Ω—è

function startGame() {
    alert('–ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!');
    generateBoard();
}

function pauseGame() {
    alert('–ò–≥—Ä–∞ –Ω–∞ –ø–∞—É–∑–µ.');
}

function resetGame() {
    alert('–ò–≥—Ä–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞!');
    generateBoard();
}

function undoMove() {
    alert('–•–æ–¥ –æ—Ç–º–µ–Ω–µ–Ω.');
}

function openShop() {
    document.querySelector('.shop').style.display = 'block';
}

function selectLevel(level) {
    if (level > currentLevel) {
        alert('–≠—Ç–æ—Ç —É—Ä–æ–≤–µ–Ω—å –ø–æ–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.');
        return;
    }
    currentLevel = level;
    alert(`–í—ã –≤—ã–±—Ä–∞–ª–∏ —É—Ä–æ–≤–µ–Ω—å ${level}`);
    // –õ–æ–≥–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —É—Ä–æ–≤–Ω—è
    loadLevel(level);
}

function loadLevel(level) {
    moves = 20 + level * 5;  // –ü—Ä–∏–º–µ—Ä —É–≤–µ–ª–∏—á–µ–Ω–∏—è —à–∞–≥–æ–≤ —Å –∫–∞–∂–¥—ã–º —É—Ä–æ–≤–Ω–µ–º
    tasks = generateTasksForLevel(level);  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–¥–∞—á
    updateTaskList();
    generateBoard();  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
}

function generateTasksForLevel(level) {
    let taskList = [];
    if (level >= 5) {
        // –° 5 —É—Ä–æ–≤–Ω—è –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞—á
        taskList.push({emoji: "üçì", count: 5});
        taskList.push({emoji: "üçí", count: 4});
    } else {
        taskList.push({emoji: "üçì", count: 3 + level});
    }
    return taskList;
}

function updateTaskList() {
    let taskListDiv = document.getElementById("task-list");
    taskListDiv.innerHTML = "";
    tasks.forEach((task, index) => {
        taskListDiv.innerHTML += `<p class="task-item">–ó–∞–¥–∞—á–∞ ${index + 1}: –°–æ–±—Ä–∞—Ç—å ${task.count} ${task.emoji}</p>`;
    });
}

function generateBoard() {
    let board = document.querySelector('.game-board');
    board.innerHTML = "";  // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ
    for (let i = 0; i < 64; i++) {
        let cell = document.createElement('div');
        cell.className = 'cell';
        cell.textContent = getRandomEmoji();  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
        board.appendChild(cell);
    }
}

function getRandomEmoji() {
    const emojis = ["‚≠ê", "‚ú®", "üí¶", "üî•", "üéâ", "‚ù§Ô∏è", "üçì", "üçí", "üçâ", "üçï", "üê±", "üêØ"];
    return emojis[Math.floor(Math.random() * emojis.length)];
}

function buyBomb() {
    if (coins >= 40) {
        coins -= 40;
        alert('–ë–æ–º–±–∞ –∫—É–ø–ª–µ–Ω–∞!');
    } else {
        alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç.');
    }
    updateCoins();
}

function buyMove() {
    if (coins >= 1) {
        coins -= 1;
        moves += 1;
        updateMoves();
    } else {
        alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç.');
    }
}

function updateCoins() {
    document.getElementById("coins").textContent = coins;
}

function updateMoves() {
    document.getElementById("moves").textContent = moves;
}

function checkMatch() {
    // –õ–æ–≥–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π –∏ —É–¥–∞–ª–µ–Ω–∏—è 3 –≤ —Ä—è–¥
}

function bombExplosion() {
    // –õ–æ–≥–∏–∫–∞ –≤–∑—Ä—ã–≤–∞ –±–æ–º–±—ã –∏ –ø–æ–¥—Å—á–µ—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
}

function generateLevel(level) {
    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É—Ä–æ–≤–Ω–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–æ–º–µ—Ä–∞
}
